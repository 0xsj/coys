syntax = "proto3";

package account;

option go_package = ".";

enum Role {
  ADMIN = 0;
  CREATOR = 1;
  USER = 2;
}

enum Status {
  PENDING = 0;
  ACTIVE = 1;
  SUSPENDED = 2;
}

message Account {
  string id = 1;
  string phone_number = 2;
  Role role = 3;
  Status status = 4;
  int64 created_at = 5;
}

message CreateAccountRequest {
  string phone_number = 1;
  Role role = 2;
}

message CreateAccountResponse { string id = 1; }

message GetAccountByIdRequest { string id = 1; }

message GetAccountByIdResponse { Account account = 1; }

message GetAccountByPhoneNumberRequest { string phone_number = 1; }

message GetAccountByPhoneNumberResponse { Account account = 1; }

message GetAccountsByRoleRequest {
  Role role = 1;
  int64 skip = 2;
  int64 limit = 3;
}

message GetAccountsByRoleResponse { repeated Account accounts = 1; }

message GetAccountsByStatusRequest {
  Status status = 1;
  int64 skip = 2;
  int64 limit = 3;
}

message GetAccountsByStatusResponse { repeated Account accounts = 1; }

message UpdateAccountRequest { Account account = 1; }

message UpdateAccountResponse { Account account = 1; }

message RemoveAccountRequest { string id = 1; }

message RemoveAccountResponse { string id = 1; }

service AccountService {
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse);
  rpc GetAccountById(GetAccountByIdRequest) returns (GetAccountByIdResponse);
  // rpc GetAccountByPhoneNumber(GetAccountByPhoneNumberRequest)
  //     returns (GetAccountByPhoneNumberResponse);
  // rpc GetAccountsByRole(GetAccountsByRoleRequest)
  //     returns (GetAccountsByRoleResponse);
  // rpc GetAccountsByStatus(GetAccountsByStatusRequest)
  //     returns (GetAccountsByStatusResponse);
  // rpc UpdateAccount(UpdateAccountRequest) returns (UpdateAccountResponse);
  // rpc RemoveAccount(RemoveAccountRequest) returns (RemoveAccountResponse);
}